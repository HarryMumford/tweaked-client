version: 2.1

jobs:
  build:
    docker:
      - image: circleci/node:14.15.0
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Show current branch
          command: echo $CIRCLE_BRANCH
      - restore_cache:
          keys:
            - app-{{ checksum "package.json"}}
            - app-
      - run:
          name: Install dependencies
          command: npm install
      - save_cache:
          paths:
            - node_modules
          key: app-{{ checksum "package.json"}}
  deploy-to-aws-s3:
    docker:
      - image: circleci/node:14.15.0
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Show current branch
          command: echo $CIRCLE_BRANCH
      - run:
          name: Installing AWS CLI
          working_directory: /
          command: |
            sudo apt-get install python-dev python-pip
            sudo pip install awscli
      - run:
          name: Build project
          command: |
            npm install
            npm run build
            cd build
            zip ../build.zip -r * .[^.]*
            echo "Build successful"
      - run:
          name: Deploy to AWS S3
          command: |
            if [ "$CIRCLE_BRANCH" == "master"]
            then
              aws --region $AWS_REGION s3 sync ~/repo/build s3://${AWS_BUCKET_PROD} --delete
            elif [ "$CIRCLE_BRANCH" == "staging"]
            then 
              aws --region $AWS_REGION s3 sync ~/repo/build s3://${AWS_BUCKET_PROD} --delete
            fi
  deploy-to-aws-cloudfront:
    docker:
      - image: circleci/node:14.15.0
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Show current branch
          command: echo $CIRCLE_BRANCH
      - run:
          name: Installing AWS CLI
          working_directory: /
          command: |
            sudo apt-get install python-dev python-pip
            sudo pip install awscli
      - run:
          name: Build project
          command: |
            npm install
            npm run build
            cd build
            zip ../build.zip -r * .[^.]*
            echo "Build successful"
      - run:
          name: Deploy to AWS S3
          command: |
            aws configure set preview.cloudfront
            if [ "$CIRCLE_BRANCH" == "master"]
            then
              aws cloudfront create-invalidation --distribution-id $DISTRIBUTION_ID_PROD --paths /\*
            elif [ "$CIRCLE_BRANCH" == "staging"]
              aws cloudfront create-invalidation --distribution-id $DISTRIBUTION_ID_STAGING --paths /\*
            then 
              aws cloudfront create-invalidation --distribution-id E2U6Y8B6GRCUPA --paths /\*
            fi
workflows:
  build_and_deploy:
    jobs:
      - build
      - deploy-to-aws-s3:
          requires:
            - build
          filters:
            branches:
              only:
                - develop
                - staging
                - master
      - deploy-to-aws-cloudfront:
          requires:
            - build
          filters:
            branches:
              only:
                - develop
                - staging
                - master
