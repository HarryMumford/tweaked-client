version: 2.1

executors:
  app-executor:
    docker:
      - image: circleci/node:14.15.0
    working_directory: ~/repo

aliases:
  - &show-current-branch-name
    run:
      name: Show current branch
      command: echo $CIRCLE_BRANCH
  - &restore-cache
    restore_cache:
      keys:
        - app-{{ checksum "package.json"}}
        - app-
  - &install-dependencies
    run:
      name: Install dependencies
      command: npm install
  - &save-cache
    save_cache:
      paths:
        - node_modules
      key: app-{{ checksum "package.json"}}
  - &install-aws-cli
    run:
      name: Installing AWS CLI
      working_directory: /
      command: |
        sudo apt-get install python-dev python-pip
        sudo pip install awscli
  - &build-project
    run:
      name: Build project
      command: |
        npm install
        npm run build
        zip build.zip -r build
        echo "Build successful"
  - &run-linter
    run:
      name: Run linter
      command: |
        npm run lint

jobs:
  build:
    executor: app-executor
    steps:
      - checkout
      - *show-current-branch-name
      - *restore-cache
      - *install-dependencies
      - *save-cache
  lint:
    executor: app-executor
    steps:
      - checkout
      - *show-current-branch-name
      - *restore-cache
      - *run-linter

  deploy-to-aws-s3:
    executor: app-executor
    steps:
      - checkout
      - *show-current-branch-name
      - *install-aws-cli
      - *build-project
      - run:
          name: Deploy to AWS S3
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]
            then
              aws --region $AWS_REGION s3 sync ~/repo/build s3://${AWS_BUCKET_PROD} --delete
            elif [ "${CIRCLE_BRANCH}" == "staging" ]
            then 
              aws --region $AWS_REGION s3 sync ~/repo/build s3://${AWS_BUCKET_STAGING} --delete
            else
              aws --region $AWS_REGION s3 sync ~/repo/build s3://${AWS_BUCKET_DEV} --delete
            fi
  deploy-to-aws-cloudfront:
    executor: app-executor
    steps:
      - checkout
      - *show-current-branch-name
      - *install-aws-cli
      - *build-project
      - run:
          name: Activate cloudfront
          command: |
            aws configure set preview.cloudfront true
            aws configure set preview.create-invalidation true
      - run:
          name: Deploy to AWS S3
          command: |
            if ["$CIRCLE_BRANCH" == "master"]
            then
              aws cloudfront create-invalidation --distribution-id $DISTRIBUTION_ID_PROD --paths "/*"
            elif ["$CIRCLE_BRANCH" == "staging"]
            then
              aws cloudfront create-invalidation --distribution-id $DISTRIBUTION_ID_STAGING --paths "/*"
            else
              aws cloudfront create-invalidation --distribution-id $DISTRIBUTION_ID_DEV --paths "/*" 
            fi
workflows:
  build_and_deploy:
    jobs:
      - build
      - lint:
          requires:
            - build
          filters:
            branches:
              only:
                - develop
                - staging
                - master
      - deploy-to-aws-s3:
          requires:
            - lint
          filters:
            branches:
              only:
                - develop
                - staging
                - master
      - deploy-to-aws-cloudfront:
          requires:
            - build
          filters:
            branches:
              only:
                - develop
                - staging
                - master
